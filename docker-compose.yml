services:
  bot:
    build:
      context: ./bot
    # Override the environment variables from the .env file
    environment:
      - NODE_ENV=production
    env_file:
      - .env
    depends_on:
      - api
    restart: unless-stopped

  api:
    build:
      context: ./api
    # Override the environment variables from the .env file
    environment:
      - NODE_ENV=production
      - CORS_ORIGIN=http://localhost:4200
    env_file:
      - .env
    ports:
      - 3000
    depends_on:
      - redis
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  dashboard:
    build:
      context: ./dashboard
    environment:
      - NODE_ENV=production
    ports:
      - "80:80"
    env_file:
      - .env
    depends_on:
      - api
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d discord_bot"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
